package com.mycompany.myapp;


import PIMobile.Entite.Utilisateur;
import PIMobile.Utils.ConnectedUser;
import PIMobile.gui.ProductList;
import com.codename1.components.SpanButton;
import com.codename1.io.CharArrayReader;
import com.codename1.io.ConnectionRequest;
import com.codename1.io.JSONParser;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import static com.codename1.ui.CN.getCurrentForm;
import static com.codename1.ui.Component.RIGHT;
import com.codename1.ui.Container;
import com.codename1.ui.FontImage;
import com.codename1.ui.Image;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import java.io.IOException;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    Form f;
    Container data;
    TextField email;
    TextField password;
    SpanButton login;

    Resources theme;

    public void init(Object context) {
         theme = UIManager.initFirstTheme("/theme");
         Toolbar.setGlobalToolbar(true);
         Image mask = theme.getImage("headaches-doctor.jpg");
         f = new Form("Login",BoxLayout.y());
         f.getAllStyles().setBgImage(mask);
        data = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        email = new TextField();
        email.setHint("Email");
        password = new TextField();
        password.setHint("Password");
        password.setConstraint(TextField.PASSWORD);
        login = new SpanButton("LOGIN");
        Label loginIcon = new Label("", "TextField");
        Label passwordIcon = new Label("", "TextField");
        loginIcon.getAllStyles().setMargin(RIGHT, 0);
        passwordIcon.getAllStyles().setMargin(RIGHT, 0);
        FontImage.setMaterialIcon(loginIcon, FontImage.MATERIAL_PERSON_OUTLINE, 3);
        FontImage.setMaterialIcon(passwordIcon, FontImage.MATERIAL_LOCK_OUTLINE, 3);
        
        email.setText("brhseif@gmail.com");
        password.setText("1234");
        data.add(BorderLayout.center(email).
                        add(BorderLayout.WEST, loginIcon));
       data.add(BorderLayout.center(password).
                        add(BorderLayout.WEST, passwordIcon));
        login.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
             ConnectionRequest con = new ConnectionRequest();
                String name = email.getText();
                String pswd = password.getText();              
                con.setUrl("http://127.0.0.1:8000/mobile/loginM?email="+name+"&password="+pswd);
               
                con.addResponseListener(new ActionListener<NetworkEvent>() {
                    @Override
                    public void actionPerformed(NetworkEvent evt) {
                        
                         try {
                    String json=new String(con.getResponseData());
                      JSONParser j = new JSONParser();
                              
                    Map<String, Object> users = j.parseJSON(new CharArrayReader(json.toCharArray())); 
                              
                    if(users.get("id")== null) 
                        {
                          Dialog.show("Erreur d'authentification", "Verifier votre Nom d'utilisateur ou mot de passe!!", "OK", "Annuler");
                         }
                    else {
                        
                        Utilisateur u = new Utilisateur();
                        float id = Float.parseFloat(users.get("id").toString()); 
                        u.setId((int) id);
                        u.setNom(users.get("nom").toString());
                        u.setEmail(users.get("email").toString());
                        ConnectedUser.setUser(u);
                            ProductList h = new ProductList();
                            h.getF().show();
                        
                    }
                    
                } catch (IOException ex) {
                }   
                 }
                });
                     NetworkManager.getInstance().addToQueue(con);
                      
            }
        });   
        data.add(login);
        f.add(data);
    }
    
    public void start() {
        if(f != null){
            f.show();
            
        }
    }

    public void stop() {
        f = getCurrentForm();
        if(f instanceof Dialog) {
            ((Dialog)f).dispose();
            f = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
